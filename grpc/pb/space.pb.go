// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: space.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventType int32

const (
	EventType_ENTRY_ADDED   EventType = 0
	EventType_ENTRY_DELETED EventType = 1
	EventType_ENTRY_UPDATED EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "ENTRY_ADDED",
		1: "ENTRY_DELETED",
		2: "ENTRY_UPDATED",
	}
	EventType_value = map[string]int32{
		"ENTRY_ADDED":   0,
		"ENTRY_DELETED": 1,
		"ENTRY_UPDATED": 2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

type ListDirectoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ListDirectoriesRequest) Reset() {
	*x = ListDirectoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesRequest) ProtoMessage() {}

func (x *ListDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

func (x *ListDirectoriesRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ListDirectoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsDir         bool   `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SizeInBytes   string `protobuf:"bytes,4,opt,name=sizeInBytes,proto3" json:"sizeInBytes,omitempty"`
	Created       string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated       string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	FileExtension string `protobuf:"bytes,7,opt,name=fileExtension,proto3" json:"fileExtension,omitempty"`
	IpfsHash      string `protobuf:"bytes,8,opt,name=ipfsHash,proto3" json:"ipfsHash,omitempty"`
}

func (x *ListDirectoryEntry) Reset() {
	*x = ListDirectoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryEntry) ProtoMessage() {}

func (x *ListDirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryEntry.ProtoReflect.Descriptor instead.
func (*ListDirectoryEntry) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

func (x *ListDirectoryEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirectoryEntry) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *ListDirectoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDirectoryEntry) GetSizeInBytes() string {
	if x != nil {
		return x.SizeInBytes
	}
	return ""
}

func (x *ListDirectoryEntry) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ListDirectoryEntry) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *ListDirectoryEntry) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *ListDirectoryEntry) GetIpfsHash() string {
	if x != nil {
		return x.IpfsHash
	}
	return ""
}

type ListDirectoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListDirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListDirectoriesResponse) Reset() {
	*x = ListDirectoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesResponse) ProtoMessage() {}

func (x *ListDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

func (x *ListDirectoriesResponse) GetEntries() []*ListDirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

func (x *ListDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirectoryRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListDirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

func (x *ListDirectoryResponse) GetEntries() []*ListDirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{5}
}

func (x *CreateBucketRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type BucketMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	IsOwner   bool   `protobuf:"varint,3,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
}

func (x *BucketMember) Reset() {
	*x = BucketMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketMember) ProtoMessage() {}

func (x *BucketMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketMember.ProtoReflect.Descriptor instead.
func (*BucketMember) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{6}
}

func (x *BucketMember) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BucketMember) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BucketMember) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name             string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path             string          `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CreatedAt        int64           `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        int64           `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Members          []*BucketMember `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	IsPersonalBucket bool            `protobuf:"varint,7,opt,name=isPersonalBucket,proto3" json:"isPersonalBucket,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{7}
}

func (x *Bucket) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bucket) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Bucket) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Bucket) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Bucket) GetMembers() []*BucketMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Bucket) GetIsPersonalBucket() bool {
	if x != nil {
		return x.IsPersonalBucket
	}
	return false
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *Bucket `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBucketResponse) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type GenerateKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyPairRequest) Reset() {
	*x = GenerateKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairRequest) ProtoMessage() {}

func (x *GenerateKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{9}
}

type GenerateKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey  string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
}

func (x *GenerateKeyPairResponse) Reset() {
	*x = GenerateKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairResponse) ProtoMessage() {}

func (x *GenerateKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateKeyPairResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GenerateKeyPairResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type FileEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  EventType           `protobuf:"varint,1,opt,name=type,proto3,enum=space.EventType" json:"type,omitempty"`
	Entry *ListDirectoryEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *FileEventResponse) Reset() {
	*x = FileEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEventResponse) ProtoMessage() {}

func (x *FileEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEventResponse.ProtoReflect.Descriptor instead.
func (*FileEventResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{11}
}

func (x *FileEventResponse) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_ENTRY_ADDED
}

func (x *FileEventResponse) GetEntry() *ListDirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type TextileEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *TextileEventResponse) Reset() {
	*x = TextileEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileEventResponse) ProtoMessage() {}

func (x *TextileEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileEventResponse.ProtoReflect.Descriptor instead.
func (*TextileEventResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{12}
}

func (x *TextileEventResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type OpenFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *OpenFileRequest) Reset() {
	*x = OpenFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileRequest) ProtoMessage() {}

func (x *OpenFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileRequest.ProtoReflect.Descriptor instead.
func (*OpenFileRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{13}
}

func (x *OpenFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenFileRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type OpenFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *OpenFileResponse) Reset() {
	*x = OpenFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileResponse) ProtoMessage() {}

func (x *OpenFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileResponse.ProtoReflect.Descriptor instead.
func (*OpenFileResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{14}
}

func (x *OpenFileResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type OpenPublicFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileCid  string `protobuf:"bytes,1,opt,name=fileCid,proto3" json:"fileCid,omitempty"`
	FileKey  string `protobuf:"bytes,2,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *OpenPublicFileRequest) Reset() {
	*x = OpenPublicFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPublicFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPublicFileRequest) ProtoMessage() {}

func (x *OpenPublicFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPublicFileRequest.ProtoReflect.Descriptor instead.
func (*OpenPublicFileRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{15}
}

func (x *OpenPublicFileRequest) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *OpenPublicFileRequest) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *OpenPublicFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type OpenPublicFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *OpenPublicFileResponse) Reset() {
	*x = OpenPublicFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPublicFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPublicFileResponse) ProtoMessage() {}

func (x *OpenPublicFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPublicFileResponse.ProtoReflect.Descriptor instead.
func (*OpenPublicFileResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{16}
}

func (x *OpenPublicFileResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type AddItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// full paths to file or Folder on FS. Needs to be a location available to the daemon
	SourcePaths []string `protobuf:"bytes,1,rep,name=sourcePaths,proto3" json:"sourcePaths,omitempty"`
	// target path in bucket.
	TargetPath string `protobuf:"bytes,2,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	// The bucket in which to save the item
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *AddItemsRequest) Reset() {
	*x = AddItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsRequest) ProtoMessage() {}

func (x *AddItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsRequest.ProtoReflect.Descriptor instead.
func (*AddItemsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{17}
}

func (x *AddItemsRequest) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *AddItemsRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *AddItemsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type AddItemResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath string `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	BucketPath string `protobuf:"bytes,2,opt,name=bucketPath,proto3" json:"bucketPath,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AddItemResult) Reset() {
	*x = AddItemResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemResult) ProtoMessage() {}

func (x *AddItemResult) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemResult.ProtoReflect.Descriptor instead.
func (*AddItemResult) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{18}
}

func (x *AddItemResult) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *AddItemResult) GetBucketPath() string {
	if x != nil {
		return x.BucketPath
	}
	return ""
}

func (x *AddItemResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AddItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *AddItemResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TotalFiles     int64          `protobuf:"varint,2,opt,name=totalFiles,proto3" json:"totalFiles,omitempty"`
	TotalBytes     int64          `protobuf:"varint,3,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	CompletedFiles int64          `protobuf:"varint,4,opt,name=completedFiles,proto3" json:"completedFiles,omitempty"`
	CompletedBytes int64          `protobuf:"varint,5,opt,name=completedBytes,proto3" json:"completedBytes,omitempty"`
}

func (x *AddItemsResponse) Reset() {
	*x = AddItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsResponse) ProtoMessage() {}

func (x *AddItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsResponse.ProtoReflect.Descriptor instead.
func (*AddItemsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{19}
}

func (x *AddItemsResponse) GetResult() *AddItemResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddItemsResponse) GetTotalFiles() int64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *AddItemsResponse) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *AddItemsResponse) GetCompletedFiles() int64 {
	if x != nil {
		return x.CompletedFiles
	}
	return 0
}

func (x *AddItemsResponse) GetCompletedBytes() int64 {
	if x != nil {
		return x.CompletedBytes
	}
	return 0
}

type CreateFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// target path in bucket to add new empty folder
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The bucket in which to add the folder
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{20}
}

func (x *CreateFolderRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateFolderRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

// not sure we need to return anything other than an error if we failed
type CreateFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFolderResponse) Reset() {
	*x = CreateFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderResponse) ProtoMessage() {}

func (x *CreateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{21}
}

type BackupKeysByPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *BackupKeysByPassphraseRequest) Reset() {
	*x = BackupKeysByPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupKeysByPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupKeysByPassphraseRequest) ProtoMessage() {}

func (x *BackupKeysByPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupKeysByPassphraseRequest.ProtoReflect.Descriptor instead.
func (*BackupKeysByPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{22}
}

func (x *BackupKeysByPassphraseRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type BackupKeysByPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BackupKeysByPassphraseResponse) Reset() {
	*x = BackupKeysByPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupKeysByPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupKeysByPassphraseResponse) ProtoMessage() {}

func (x *BackupKeysByPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupKeysByPassphraseResponse.ProtoReflect.Descriptor instead.
func (*BackupKeysByPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{23}
}

type RecoverKeysByPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passphrase string `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *RecoverKeysByPassphraseRequest) Reset() {
	*x = RecoverKeysByPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByPassphraseRequest) ProtoMessage() {}

func (x *RecoverKeysByPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByPassphraseRequest.ProtoReflect.Descriptor instead.
func (*RecoverKeysByPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{24}
}

func (x *RecoverKeysByPassphraseRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type RecoverKeysByPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverKeysByPassphraseResponse) Reset() {
	*x = RecoverKeysByPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByPassphraseResponse) ProtoMessage() {}

func (x *RecoverKeysByPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByPassphraseResponse.ProtoReflect.Descriptor instead.
func (*RecoverKeysByPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{25}
}

type ThreadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Key       string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ThreadInfo) Reset() {
	*x = ThreadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfo) ProtoMessage() {}

func (x *ThreadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfo.ProtoReflect.Descriptor instead.
func (*ThreadInfo) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{26}
}

func (x *ThreadInfo) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ThreadInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ShareBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ShareBucketRequest) Reset() {
	*x = ShareBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketRequest) ProtoMessage() {}

func (x *ShareBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketRequest.ProtoReflect.Descriptor instead.
func (*ShareBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{27}
}

func (x *ShareBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ShareBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threadinfo *ThreadInfo `protobuf:"bytes,1,opt,name=threadinfo,proto3" json:"threadinfo,omitempty"`
}

func (x *ShareBucketResponse) Reset() {
	*x = ShareBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketResponse) ProtoMessage() {}

func (x *ShareBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketResponse.ProtoReflect.Descriptor instead.
func (*ShareBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{28}
}

func (x *ShareBucketResponse) GetThreadinfo() *ThreadInfo {
	if x != nil {
		return x.Threadinfo
	}
	return nil
}

type JoinBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threadinfo   *ThreadInfo `protobuf:"bytes,1,opt,name=threadinfo,proto3" json:"threadinfo,omitempty"`
	Bucket       string      `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	InvitationID string      `protobuf:"bytes,3,opt,name=invitationID,proto3" json:"invitationID,omitempty"`
}

func (x *JoinBucketRequest) Reset() {
	*x = JoinBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinBucketRequest) ProtoMessage() {}

func (x *JoinBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinBucketRequest.ProtoReflect.Descriptor instead.
func (*JoinBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{29}
}

func (x *JoinBucketRequest) GetThreadinfo() *ThreadInfo {
	if x != nil {
		return x.Threadinfo
	}
	return nil
}

func (x *JoinBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *JoinBucketRequest) GetInvitationID() string {
	if x != nil {
		return x.InvitationID
	}
	return ""
}

type JoinBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JoinBucketResponse) Reset() {
	*x = JoinBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinBucketResponse) ProtoMessage() {}

func (x *JoinBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinBucketResponse.ProtoReflect.Descriptor instead.
func (*JoinBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{30}
}

func (x *JoinBucketResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ShareBucketViaPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys []string `protobuf:"bytes,1,rep,name=publicKeys,proto3" json:"publicKeys,omitempty"`
	Bucket     string   `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ShareBucketViaPublicKeyRequest) Reset() {
	*x = ShareBucketViaPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketViaPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketViaPublicKeyRequest) ProtoMessage() {}

func (x *ShareBucketViaPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketViaPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*ShareBucketViaPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{31}
}

func (x *ShareBucketViaPublicKeyRequest) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *ShareBucketViaPublicKeyRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ShareBucketViaPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShareBucketViaPublicKeyResponse) Reset() {
	*x = ShareBucketViaPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketViaPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketViaPublicKeyResponse) ProtoMessage() {}

func (x *ShareBucketViaPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketViaPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*ShareBucketViaPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{32}
}

type GeneratePublicFileLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ItemPaths []string `protobuf:"bytes,2,rep,name=itemPaths,proto3" json:"itemPaths,omitempty"`
	Password  string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GeneratePublicFileLinkRequest) Reset() {
	*x = GeneratePublicFileLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePublicFileLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePublicFileLinkRequest) ProtoMessage() {}

func (x *GeneratePublicFileLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePublicFileLinkRequest.ProtoReflect.Descriptor instead.
func (*GeneratePublicFileLinkRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{33}
}

func (x *GeneratePublicFileLinkRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GeneratePublicFileLinkRequest) GetItemPaths() []string {
	if x != nil {
		return x.ItemPaths
	}
	return nil
}

func (x *GeneratePublicFileLinkRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GeneratePublicFileLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link    string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	FileCid string `protobuf:"bytes,2,opt,name=fileCid,proto3" json:"fileCid,omitempty"`
}

func (x *GeneratePublicFileLinkResponse) Reset() {
	*x = GeneratePublicFileLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePublicFileLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePublicFileLinkResponse) ProtoMessage() {}

func (x *GeneratePublicFileLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePublicFileLinkResponse.ProtoReflect.Descriptor instead.
func (*GeneratePublicFileLinkResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{34}
}

func (x *GeneratePublicFileLinkResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GeneratePublicFileLinkResponse) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

type ToggleFuseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MountDrive bool `protobuf:"varint,1,opt,name=mountDrive,proto3" json:"mountDrive,omitempty"`
}

func (x *ToggleFuseRequest) Reset() {
	*x = ToggleFuseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleFuseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFuseRequest) ProtoMessage() {}

func (x *ToggleFuseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFuseRequest.ProtoReflect.Descriptor instead.
func (*ToggleFuseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{35}
}

func (x *ToggleFuseRequest) GetMountDrive() bool {
	if x != nil {
		return x.MountDrive
	}
	return false
}

type FuseDriveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuseDriveMounted bool `protobuf:"varint,1,opt,name=fuseDriveMounted,proto3" json:"fuseDriveMounted,omitempty"`
}

func (x *FuseDriveResponse) Reset() {
	*x = FuseDriveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseDriveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseDriveResponse) ProtoMessage() {}

func (x *FuseDriveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseDriveResponse.ProtoReflect.Descriptor instead.
func (*FuseDriveResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{36}
}

func (x *FuseDriveResponse) GetFuseDriveMounted() bool {
	if x != nil {
		return x.FuseDriveMounted
	}
	return false
}

type ListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBucketsRequest) Reset() {
	*x = ListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsRequest) ProtoMessage() {}

func (x *ListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsRequest.ProtoReflect.Descriptor instead.
func (*ListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{37}
}

type ListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *ListBucketsResponse) Reset() {
	*x = ListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsResponse) ProtoMessage() {}

func (x *ListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsResponse.ProtoReflect.Descriptor instead.
func (*ListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{38}
}

func (x *ListBucketsResponse) GetBuckets() []*Bucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type CopyAndShareFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket        string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ItemPaths     []string `protobuf:"bytes,2,rep,name=itemPaths,proto3" json:"itemPaths,omitempty"`
	PublicKeys    []string `protobuf:"bytes,3,rep,name=publicKeys,proto3" json:"publicKeys,omitempty"`
	CustomMessage string   `protobuf:"bytes,4,opt,name=customMessage,proto3" json:"customMessage,omitempty"`
}

func (x *CopyAndShareFilesRequest) Reset() {
	*x = CopyAndShareFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyAndShareFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyAndShareFilesRequest) ProtoMessage() {}

func (x *CopyAndShareFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyAndShareFilesRequest.ProtoReflect.Descriptor instead.
func (*CopyAndShareFilesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{39}
}

func (x *CopyAndShareFilesRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CopyAndShareFilesRequest) GetItemPaths() []string {
	if x != nil {
		return x.ItemPaths
	}
	return nil
}

func (x *CopyAndShareFilesRequest) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *CopyAndShareFilesRequest) GetCustomMessage() string {
	if x != nil {
		return x.CustomMessage
	}
	return ""
}

type CopyAndShareFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CopyAndShareFilesResponse) Reset() {
	*x = CopyAndShareFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyAndShareFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyAndShareFilesResponse) ProtoMessage() {}

func (x *CopyAndShareFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyAndShareFilesResponse.ProtoReflect.Descriptor instead.
func (*CopyAndShareFilesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{40}
}

var File_space_proto protoreflect.FileDescriptor

var file_space_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x30, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0xea, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x7a,
	0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x66, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x66, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4e,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x42,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x4c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x29, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x60, 0x0a, 0x0c, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xd9, 0x01,
	0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6a, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2e, 0x0a, 0x14, 0x54, 0x65, 0x78, 0x74, 0x69,
	0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2e, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x34, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x65, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x1d, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x1e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1f,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2c, 0x0a,
	0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x13, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12, 0x4a, 0x6f,
	0x69, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x1e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x11, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x22, 0x3f, 0x0a,
	0x11, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x75,
	0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x6e, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a,
	0x19, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x42, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xbf,
	0x12, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x70, 0x69, 0x12, 0x6d, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x63, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x72, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x6b,
	0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x65, 0x79,
	0x70, 0x61, 0x69, 0x72, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x68, 0x0a, 0x0c, 0x54, 0x78, 0x6c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x30,
	0x01, 0x12, 0x56, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x9d, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x6b, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x53, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x5a, 0x0a, 0x0f, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x46, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22,
	0x08, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x75, 0x73, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x58, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x75, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x3a,
	0x01, 0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x25,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x3a, 0x01,
	0x2a, 0x12, 0x6b, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x67,
	0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f,
	0x6a, 0x6f, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x9b, 0x01, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69,
	0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x7e, 0x0a, 0x11, 0x43, 0x6f, 0x70, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x70, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x70, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x70, 0x79,
	0x41, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_proto_rawDescOnce sync.Once
	file_space_proto_rawDescData = file_space_proto_rawDesc
)

func file_space_proto_rawDescGZIP() []byte {
	file_space_proto_rawDescOnce.Do(func() {
		file_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_proto_rawDescData)
	})
	return file_space_proto_rawDescData
}

var file_space_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_space_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_space_proto_goTypes = []interface{}{
	(EventType)(0),                          // 0: space.EventType
	(*ListDirectoriesRequest)(nil),          // 1: space.ListDirectoriesRequest
	(*ListDirectoryEntry)(nil),              // 2: space.ListDirectoryEntry
	(*ListDirectoriesResponse)(nil),         // 3: space.ListDirectoriesResponse
	(*ListDirectoryRequest)(nil),            // 4: space.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),           // 5: space.ListDirectoryResponse
	(*CreateBucketRequest)(nil),             // 6: space.CreateBucketRequest
	(*BucketMember)(nil),                    // 7: space.BucketMember
	(*Bucket)(nil),                          // 8: space.Bucket
	(*CreateBucketResponse)(nil),            // 9: space.CreateBucketResponse
	(*GenerateKeyPairRequest)(nil),          // 10: space.GenerateKeyPairRequest
	(*GenerateKeyPairResponse)(nil),         // 11: space.GenerateKeyPairResponse
	(*FileEventResponse)(nil),               // 12: space.FileEventResponse
	(*TextileEventResponse)(nil),            // 13: space.TextileEventResponse
	(*OpenFileRequest)(nil),                 // 14: space.OpenFileRequest
	(*OpenFileResponse)(nil),                // 15: space.OpenFileResponse
	(*OpenPublicFileRequest)(nil),           // 16: space.OpenPublicFileRequest
	(*OpenPublicFileResponse)(nil),          // 17: space.OpenPublicFileResponse
	(*AddItemsRequest)(nil),                 // 18: space.AddItemsRequest
	(*AddItemResult)(nil),                   // 19: space.AddItemResult
	(*AddItemsResponse)(nil),                // 20: space.AddItemsResponse
	(*CreateFolderRequest)(nil),             // 21: space.CreateFolderRequest
	(*CreateFolderResponse)(nil),            // 22: space.CreateFolderResponse
	(*BackupKeysByPassphraseRequest)(nil),   // 23: space.BackupKeysByPassphraseRequest
	(*BackupKeysByPassphraseResponse)(nil),  // 24: space.BackupKeysByPassphraseResponse
	(*RecoverKeysByPassphraseRequest)(nil),  // 25: space.RecoverKeysByPassphraseRequest
	(*RecoverKeysByPassphraseResponse)(nil), // 26: space.RecoverKeysByPassphraseResponse
	(*ThreadInfo)(nil),                      // 27: space.ThreadInfo
	(*ShareBucketRequest)(nil),              // 28: space.ShareBucketRequest
	(*ShareBucketResponse)(nil),             // 29: space.ShareBucketResponse
	(*JoinBucketRequest)(nil),               // 30: space.JoinBucketRequest
	(*JoinBucketResponse)(nil),              // 31: space.JoinBucketResponse
	(*ShareBucketViaPublicKeyRequest)(nil),  // 32: space.ShareBucketViaPublicKeyRequest
	(*ShareBucketViaPublicKeyResponse)(nil), // 33: space.ShareBucketViaPublicKeyResponse
	(*GeneratePublicFileLinkRequest)(nil),   // 34: space.GeneratePublicFileLinkRequest
	(*GeneratePublicFileLinkResponse)(nil),  // 35: space.GeneratePublicFileLinkResponse
	(*ToggleFuseRequest)(nil),               // 36: space.ToggleFuseRequest
	(*FuseDriveResponse)(nil),               // 37: space.FuseDriveResponse
	(*ListBucketsRequest)(nil),              // 38: space.ListBucketsRequest
	(*ListBucketsResponse)(nil),             // 39: space.ListBucketsResponse
	(*CopyAndShareFilesRequest)(nil),        // 40: space.CopyAndShareFilesRequest
	(*CopyAndShareFilesResponse)(nil),       // 41: space.CopyAndShareFilesResponse
	(*empty.Empty)(nil),                     // 42: google.protobuf.Empty
}
var file_space_proto_depIdxs = []int32{
	2,  // 0: space.ListDirectoriesResponse.entries:type_name -> space.ListDirectoryEntry
	2,  // 1: space.ListDirectoryResponse.entries:type_name -> space.ListDirectoryEntry
	7,  // 2: space.Bucket.members:type_name -> space.BucketMember
	8,  // 3: space.CreateBucketResponse.bucket:type_name -> space.Bucket
	0,  // 4: space.FileEventResponse.type:type_name -> space.EventType
	2,  // 5: space.FileEventResponse.entry:type_name -> space.ListDirectoryEntry
	19, // 6: space.AddItemsResponse.result:type_name -> space.AddItemResult
	27, // 7: space.ShareBucketResponse.threadinfo:type_name -> space.ThreadInfo
	27, // 8: space.JoinBucketRequest.threadinfo:type_name -> space.ThreadInfo
	8,  // 9: space.ListBucketsResponse.buckets:type_name -> space.Bucket
	1,  // 10: space.SpaceApi.ListDirectories:input_type -> space.ListDirectoriesRequest
	4,  // 11: space.SpaceApi.ListDirectory:input_type -> space.ListDirectoryRequest
	10, // 12: space.SpaceApi.GenerateKeyPair:input_type -> space.GenerateKeyPairRequest
	10, // 13: space.SpaceApi.GenerateKeyPairWithForce:input_type -> space.GenerateKeyPairRequest
	42, // 14: space.SpaceApi.Subscribe:input_type -> google.protobuf.Empty
	42, // 15: space.SpaceApi.TxlSubscribe:input_type -> google.protobuf.Empty
	14, // 16: space.SpaceApi.OpenFile:input_type -> space.OpenFileRequest
	34, // 17: space.SpaceApi.GeneratePublicFileLink:input_type -> space.GeneratePublicFileLinkRequest
	16, // 18: space.SpaceApi.OpenPublicFile:input_type -> space.OpenPublicFileRequest
	18, // 19: space.SpaceApi.AddItems:input_type -> space.AddItemsRequest
	21, // 20: space.SpaceApi.CreateFolder:input_type -> space.CreateFolderRequest
	36, // 21: space.SpaceApi.ToggleFuseDrive:input_type -> space.ToggleFuseRequest
	42, // 22: space.SpaceApi.GetFuseDriveStatus:input_type -> google.protobuf.Empty
	6,  // 23: space.SpaceApi.CreateBucket:input_type -> space.CreateBucketRequest
	23, // 24: space.SpaceApi.BackupKeysByPassphrase:input_type -> space.BackupKeysByPassphraseRequest
	25, // 25: space.SpaceApi.RecoverKeysByPassphrase:input_type -> space.RecoverKeysByPassphraseRequest
	28, // 26: space.SpaceApi.ShareBucket:input_type -> space.ShareBucketRequest
	30, // 27: space.SpaceApi.JoinBucket:input_type -> space.JoinBucketRequest
	32, // 28: space.SpaceApi.ShareBucketViaPublicKey:input_type -> space.ShareBucketViaPublicKeyRequest
	38, // 29: space.SpaceApi.ListBuckets:input_type -> space.ListBucketsRequest
	40, // 30: space.SpaceApi.CopyAndShareFiles:input_type -> space.CopyAndShareFilesRequest
	3,  // 31: space.SpaceApi.ListDirectories:output_type -> space.ListDirectoriesResponse
	5,  // 32: space.SpaceApi.ListDirectory:output_type -> space.ListDirectoryResponse
	11, // 33: space.SpaceApi.GenerateKeyPair:output_type -> space.GenerateKeyPairResponse
	11, // 34: space.SpaceApi.GenerateKeyPairWithForce:output_type -> space.GenerateKeyPairResponse
	12, // 35: space.SpaceApi.Subscribe:output_type -> space.FileEventResponse
	13, // 36: space.SpaceApi.TxlSubscribe:output_type -> space.TextileEventResponse
	15, // 37: space.SpaceApi.OpenFile:output_type -> space.OpenFileResponse
	35, // 38: space.SpaceApi.GeneratePublicFileLink:output_type -> space.GeneratePublicFileLinkResponse
	17, // 39: space.SpaceApi.OpenPublicFile:output_type -> space.OpenPublicFileResponse
	20, // 40: space.SpaceApi.AddItems:output_type -> space.AddItemsResponse
	22, // 41: space.SpaceApi.CreateFolder:output_type -> space.CreateFolderResponse
	37, // 42: space.SpaceApi.ToggleFuseDrive:output_type -> space.FuseDriveResponse
	37, // 43: space.SpaceApi.GetFuseDriveStatus:output_type -> space.FuseDriveResponse
	9,  // 44: space.SpaceApi.CreateBucket:output_type -> space.CreateBucketResponse
	24, // 45: space.SpaceApi.BackupKeysByPassphrase:output_type -> space.BackupKeysByPassphraseResponse
	26, // 46: space.SpaceApi.RecoverKeysByPassphrase:output_type -> space.RecoverKeysByPassphraseResponse
	29, // 47: space.SpaceApi.ShareBucket:output_type -> space.ShareBucketResponse
	31, // 48: space.SpaceApi.JoinBucket:output_type -> space.JoinBucketResponse
	33, // 49: space.SpaceApi.ShareBucketViaPublicKey:output_type -> space.ShareBucketViaPublicKeyResponse
	39, // 50: space.SpaceApi.ListBuckets:output_type -> space.ListBucketsResponse
	41, // 51: space.SpaceApi.CopyAndShareFiles:output_type -> space.CopyAndShareFilesResponse
	31, // [31:52] is the sub-list for method output_type
	10, // [10:31] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_space_proto_init() }
func file_space_proto_init() {
	if File_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPublicFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPublicFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupKeysByPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupKeysByPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketViaPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketViaPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePublicFileLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePublicFileLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleFuseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseDriveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyAndShareFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyAndShareFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_proto_goTypes,
		DependencyIndexes: file_space_proto_depIdxs,
		EnumInfos:         file_space_proto_enumTypes,
		MessageInfos:      file_space_proto_msgTypes,
	}.Build()
	File_space_proto = out.File
	file_space_proto_rawDesc = nil
	file_space_proto_goTypes = nil
	file_space_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpaceApiClient is the client API for SpaceApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpaceApiClient interface {
	// Get all folder or files in the default bucket. It fetches all subdirectories too.
	ListDirectories(ctx context.Context, in *ListDirectoriesRequest, opts ...grpc.CallOption) (*ListDirectoriesResponse, error)
	// Get the folder or files in the path directory.
	// Unlike ListDirectories, this only returns immediate children at path.
	ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error)
	// Generate Key Pair for current account.
	// This will return error if daemon account already has keypairs
	GenerateKeyPair(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error)
	// Force Generation of KeyPair. This will override existing keys stored in daemon.
	GenerateKeyPairWithForce(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error)
	// Subscribe to file events. This streams responses to the caller
	Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_SubscribeClient, error)
	// Subscribe to textile events. This streams responses to the caller
	TxlSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_TxlSubscribeClient, error)
	// Open a file in the daemon.
	// Daemon keeps track of all open files and closes them if no activity is noticed after a while
	OpenFile(ctx context.Context, in *OpenFileRequest, opts ...grpc.CallOption) (*OpenFileResponse, error)
	// Generates a copy of the file that's accessible through IPFS gateways
	GeneratePublicFileLink(ctx context.Context, in *GeneratePublicFileLinkRequest, opts ...grpc.CallOption) (*GeneratePublicFileLinkResponse, error)
	// Open an encrypted public shared file in the daemon.
	// This requires the decryption key and file hash/cid to work
	OpenPublicFile(ctx context.Context, in *OpenPublicFileRequest, opts ...grpc.CallOption) (*OpenPublicFileResponse, error)
	// Adds items (files/folders) to be uploaded to the bucket.
	AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (SpaceApi_AddItemsClient, error)
	// Creates a folder/directory at the specified path
	CreateFolder(ctx context.Context, in *CreateFolderRequest, opts ...grpc.CallOption) (*CreateFolderResponse, error)
	// Toggle FUSE drive to be mounted or unmounted
	ToggleFuseDrive(ctx context.Context, in *ToggleFuseRequest, opts ...grpc.CallOption) (*FuseDriveResponse, error)
	// Get status of FUSE drive. If mounted or unmounted
	GetFuseDriveStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FuseDriveResponse, error)
	// Create a new bucket owned by current user (aka keypair)
	CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*CreateBucketResponse, error)
	// Backup Key by Passphrase
	BackupKeysByPassphrase(ctx context.Context, in *BackupKeysByPassphraseRequest, opts ...grpc.CallOption) (*BackupKeysByPassphraseResponse, error)
	// Recover Keys by Passphrase
	RecoverKeysByPassphrase(ctx context.Context, in *RecoverKeysByPassphraseRequest, opts ...grpc.CallOption) (*RecoverKeysByPassphraseResponse, error)
	// Share bucket
	ShareBucket(ctx context.Context, in *ShareBucketRequest, opts ...grpc.CallOption) (*ShareBucketResponse, error)
	// Join bucket
	JoinBucket(ctx context.Context, in *JoinBucketRequest, opts ...grpc.CallOption) (*JoinBucketResponse, error)
	// Share bucket via public key using Textile Hub inboxing
	ShareBucketViaPublicKey(ctx context.Context, in *ShareBucketViaPublicKeyRequest, opts ...grpc.CallOption) (*ShareBucketViaPublicKeyResponse, error)
	ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error)
	// Copies a set of files in a new or existing bucket that's shared with a group of public keys
	// Auxiliary method that internally calls CreateBucket, ShareBucketViaPublicKey, AddFile.
	CopyAndShareFiles(ctx context.Context, in *CopyAndShareFilesRequest, opts ...grpc.CallOption) (*CopyAndShareFilesResponse, error)
}

type spaceApiClient struct {
	cc grpc.ClientConnInterface
}

func NewSpaceApiClient(cc grpc.ClientConnInterface) SpaceApiClient {
	return &spaceApiClient{cc}
}

func (c *spaceApiClient) ListDirectories(ctx context.Context, in *ListDirectoriesRequest, opts ...grpc.CallOption) (*ListDirectoriesResponse, error) {
	out := new(ListDirectoriesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListDirectories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error) {
	out := new(ListDirectoryResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GenerateKeyPair(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error) {
	out := new(GenerateKeyPairResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GenerateKeyPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GenerateKeyPairWithForce(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error) {
	out := new(GenerateKeyPairResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GenerateKeyPairWithForce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[0], "/space.SpaceApi/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_SubscribeClient interface {
	Recv() (*FileEventResponse, error)
	grpc.ClientStream
}

type spaceApiSubscribeClient struct {
	grpc.ClientStream
}

func (x *spaceApiSubscribeClient) Recv() (*FileEventResponse, error) {
	m := new(FileEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) TxlSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_TxlSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[1], "/space.SpaceApi/TxlSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiTxlSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_TxlSubscribeClient interface {
	Recv() (*TextileEventResponse, error)
	grpc.ClientStream
}

type spaceApiTxlSubscribeClient struct {
	grpc.ClientStream
}

func (x *spaceApiTxlSubscribeClient) Recv() (*TextileEventResponse, error) {
	m := new(TextileEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) OpenFile(ctx context.Context, in *OpenFileRequest, opts ...grpc.CallOption) (*OpenFileResponse, error) {
	out := new(OpenFileResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/OpenFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GeneratePublicFileLink(ctx context.Context, in *GeneratePublicFileLinkRequest, opts ...grpc.CallOption) (*GeneratePublicFileLinkResponse, error) {
	out := new(GeneratePublicFileLinkResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GeneratePublicFileLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) OpenPublicFile(ctx context.Context, in *OpenPublicFileRequest, opts ...grpc.CallOption) (*OpenPublicFileResponse, error) {
	out := new(OpenPublicFileResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/OpenPublicFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (SpaceApi_AddItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[2], "/space.SpaceApi/AddItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiAddItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_AddItemsClient interface {
	Recv() (*AddItemsResponse, error)
	grpc.ClientStream
}

type spaceApiAddItemsClient struct {
	grpc.ClientStream
}

func (x *spaceApiAddItemsClient) Recv() (*AddItemsResponse, error) {
	m := new(AddItemsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) CreateFolder(ctx context.Context, in *CreateFolderRequest, opts ...grpc.CallOption) (*CreateFolderResponse, error) {
	out := new(CreateFolderResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CreateFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ToggleFuseDrive(ctx context.Context, in *ToggleFuseRequest, opts ...grpc.CallOption) (*FuseDriveResponse, error) {
	out := new(FuseDriveResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ToggleFuseDrive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetFuseDriveStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FuseDriveResponse, error) {
	out := new(FuseDriveResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetFuseDriveStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*CreateBucketResponse, error) {
	out := new(CreateBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CreateBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) BackupKeysByPassphrase(ctx context.Context, in *BackupKeysByPassphraseRequest, opts ...grpc.CallOption) (*BackupKeysByPassphraseResponse, error) {
	out := new(BackupKeysByPassphraseResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/BackupKeysByPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) RecoverKeysByPassphrase(ctx context.Context, in *RecoverKeysByPassphraseRequest, opts ...grpc.CallOption) (*RecoverKeysByPassphraseResponse, error) {
	out := new(RecoverKeysByPassphraseResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/RecoverKeysByPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ShareBucket(ctx context.Context, in *ShareBucketRequest, opts ...grpc.CallOption) (*ShareBucketResponse, error) {
	out := new(ShareBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ShareBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) JoinBucket(ctx context.Context, in *JoinBucketRequest, opts ...grpc.CallOption) (*JoinBucketResponse, error) {
	out := new(JoinBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/JoinBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ShareBucketViaPublicKey(ctx context.Context, in *ShareBucketViaPublicKeyRequest, opts ...grpc.CallOption) (*ShareBucketViaPublicKeyResponse, error) {
	out := new(ShareBucketViaPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ShareBucketViaPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error) {
	out := new(ListBucketsResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListBuckets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) CopyAndShareFiles(ctx context.Context, in *CopyAndShareFilesRequest, opts ...grpc.CallOption) (*CopyAndShareFilesResponse, error) {
	out := new(CopyAndShareFilesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CopyAndShareFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceApiServer is the server API for SpaceApi service.
type SpaceApiServer interface {
	// Get all folder or files in the default bucket. It fetches all subdirectories too.
	ListDirectories(context.Context, *ListDirectoriesRequest) (*ListDirectoriesResponse, error)
	// Get the folder or files in the path directory.
	// Unlike ListDirectories, this only returns immediate children at path.
	ListDirectory(context.Context, *ListDirectoryRequest) (*ListDirectoryResponse, error)
	// Generate Key Pair for current account.
	// This will return error if daemon account already has keypairs
	GenerateKeyPair(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error)
	// Force Generation of KeyPair. This will override existing keys stored in daemon.
	GenerateKeyPairWithForce(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error)
	// Subscribe to file events. This streams responses to the caller
	Subscribe(*empty.Empty, SpaceApi_SubscribeServer) error
	// Subscribe to textile events. This streams responses to the caller
	TxlSubscribe(*empty.Empty, SpaceApi_TxlSubscribeServer) error
	// Open a file in the daemon.
	// Daemon keeps track of all open files and closes them if no activity is noticed after a while
	OpenFile(context.Context, *OpenFileRequest) (*OpenFileResponse, error)
	// Generates a copy of the file that's accessible through IPFS gateways
	GeneratePublicFileLink(context.Context, *GeneratePublicFileLinkRequest) (*GeneratePublicFileLinkResponse, error)
	// Open an encrypted public shared file in the daemon.
	// This requires the decryption key and file hash/cid to work
	OpenPublicFile(context.Context, *OpenPublicFileRequest) (*OpenPublicFileResponse, error)
	// Adds items (files/folders) to be uploaded to the bucket.
	AddItems(*AddItemsRequest, SpaceApi_AddItemsServer) error
	// Creates a folder/directory at the specified path
	CreateFolder(context.Context, *CreateFolderRequest) (*CreateFolderResponse, error)
	// Toggle FUSE drive to be mounted or unmounted
	ToggleFuseDrive(context.Context, *ToggleFuseRequest) (*FuseDriveResponse, error)
	// Get status of FUSE drive. If mounted or unmounted
	GetFuseDriveStatus(context.Context, *empty.Empty) (*FuseDriveResponse, error)
	// Create a new bucket owned by current user (aka keypair)
	CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error)
	// Backup Key by Passphrase
	BackupKeysByPassphrase(context.Context, *BackupKeysByPassphraseRequest) (*BackupKeysByPassphraseResponse, error)
	// Recover Keys by Passphrase
	RecoverKeysByPassphrase(context.Context, *RecoverKeysByPassphraseRequest) (*RecoverKeysByPassphraseResponse, error)
	// Share bucket
	ShareBucket(context.Context, *ShareBucketRequest) (*ShareBucketResponse, error)
	// Join bucket
	JoinBucket(context.Context, *JoinBucketRequest) (*JoinBucketResponse, error)
	// Share bucket via public key using Textile Hub inboxing
	ShareBucketViaPublicKey(context.Context, *ShareBucketViaPublicKeyRequest) (*ShareBucketViaPublicKeyResponse, error)
	ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error)
	// Copies a set of files in a new or existing bucket that's shared with a group of public keys
	// Auxiliary method that internally calls CreateBucket, ShareBucketViaPublicKey, AddFile.
	CopyAndShareFiles(context.Context, *CopyAndShareFilesRequest) (*CopyAndShareFilesResponse, error)
}

// UnimplementedSpaceApiServer can be embedded to have forward compatible implementations.
type UnimplementedSpaceApiServer struct {
}

func (*UnimplementedSpaceApiServer) ListDirectories(context.Context, *ListDirectoriesRequest) (*ListDirectoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectories not implemented")
}
func (*UnimplementedSpaceApiServer) ListDirectory(context.Context, *ListDirectoryRequest) (*ListDirectoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectory not implemented")
}
func (*UnimplementedSpaceApiServer) GenerateKeyPair(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeyPair not implemented")
}
func (*UnimplementedSpaceApiServer) GenerateKeyPairWithForce(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeyPairWithForce not implemented")
}
func (*UnimplementedSpaceApiServer) Subscribe(*empty.Empty, SpaceApi_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedSpaceApiServer) TxlSubscribe(*empty.Empty, SpaceApi_TxlSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method TxlSubscribe not implemented")
}
func (*UnimplementedSpaceApiServer) OpenFile(context.Context, *OpenFileRequest) (*OpenFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenFile not implemented")
}
func (*UnimplementedSpaceApiServer) GeneratePublicFileLink(context.Context, *GeneratePublicFileLinkRequest) (*GeneratePublicFileLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePublicFileLink not implemented")
}
func (*UnimplementedSpaceApiServer) OpenPublicFile(context.Context, *OpenPublicFileRequest) (*OpenPublicFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPublicFile not implemented")
}
func (*UnimplementedSpaceApiServer) AddItems(*AddItemsRequest, SpaceApi_AddItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method AddItems not implemented")
}
func (*UnimplementedSpaceApiServer) CreateFolder(context.Context, *CreateFolderRequest) (*CreateFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFolder not implemented")
}
func (*UnimplementedSpaceApiServer) ToggleFuseDrive(context.Context, *ToggleFuseRequest) (*FuseDriveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleFuseDrive not implemented")
}
func (*UnimplementedSpaceApiServer) GetFuseDriveStatus(context.Context, *empty.Empty) (*FuseDriveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFuseDriveStatus not implemented")
}
func (*UnimplementedSpaceApiServer) CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBucket not implemented")
}
func (*UnimplementedSpaceApiServer) BackupKeysByPassphrase(context.Context, *BackupKeysByPassphraseRequest) (*BackupKeysByPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackupKeysByPassphrase not implemented")
}
func (*UnimplementedSpaceApiServer) RecoverKeysByPassphrase(context.Context, *RecoverKeysByPassphraseRequest) (*RecoverKeysByPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverKeysByPassphrase not implemented")
}
func (*UnimplementedSpaceApiServer) ShareBucket(context.Context, *ShareBucketRequest) (*ShareBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareBucket not implemented")
}
func (*UnimplementedSpaceApiServer) JoinBucket(context.Context, *JoinBucketRequest) (*JoinBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinBucket not implemented")
}
func (*UnimplementedSpaceApiServer) ShareBucketViaPublicKey(context.Context, *ShareBucketViaPublicKeyRequest) (*ShareBucketViaPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareBucketViaPublicKey not implemented")
}
func (*UnimplementedSpaceApiServer) ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuckets not implemented")
}
func (*UnimplementedSpaceApiServer) CopyAndShareFiles(context.Context, *CopyAndShareFilesRequest) (*CopyAndShareFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyAndShareFiles not implemented")
}

func RegisterSpaceApiServer(s *grpc.Server, srv SpaceApiServer) {
	s.RegisterService(&_SpaceApi_serviceDesc, srv)
}

func _SpaceApi_ListDirectories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListDirectories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListDirectories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListDirectories(ctx, req.(*ListDirectoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ListDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListDirectory(ctx, req.(*ListDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GenerateKeyPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeyPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GenerateKeyPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GenerateKeyPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GenerateKeyPair(ctx, req.(*GenerateKeyPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GenerateKeyPairWithForce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeyPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GenerateKeyPairWithForce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GenerateKeyPairWithForce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GenerateKeyPairWithForce(ctx, req.(*GenerateKeyPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).Subscribe(m, &spaceApiSubscribeServer{stream})
}

type SpaceApi_SubscribeServer interface {
	Send(*FileEventResponse) error
	grpc.ServerStream
}

type spaceApiSubscribeServer struct {
	grpc.ServerStream
}

func (x *spaceApiSubscribeServer) Send(m *FileEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_TxlSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).TxlSubscribe(m, &spaceApiTxlSubscribeServer{stream})
}

type SpaceApi_TxlSubscribeServer interface {
	Send(*TextileEventResponse) error
	grpc.ServerStream
}

type spaceApiTxlSubscribeServer struct {
	grpc.ServerStream
}

func (x *spaceApiTxlSubscribeServer) Send(m *TextileEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_OpenFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).OpenFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/OpenFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).OpenFile(ctx, req.(*OpenFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GeneratePublicFileLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePublicFileLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GeneratePublicFileLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GeneratePublicFileLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GeneratePublicFileLink(ctx, req.(*GeneratePublicFileLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_OpenPublicFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPublicFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).OpenPublicFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/OpenPublicFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).OpenPublicFile(ctx, req.(*OpenPublicFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_AddItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AddItemsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).AddItems(m, &spaceApiAddItemsServer{stream})
}

type SpaceApi_AddItemsServer interface {
	Send(*AddItemsResponse) error
	grpc.ServerStream
}

type spaceApiAddItemsServer struct {
	grpc.ServerStream
}

func (x *spaceApiAddItemsServer) Send(m *AddItemsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_CreateFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CreateFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CreateFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CreateFolder(ctx, req.(*CreateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ToggleFuseDrive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleFuseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ToggleFuseDrive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ToggleFuseDrive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ToggleFuseDrive(ctx, req.(*ToggleFuseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetFuseDriveStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetFuseDriveStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetFuseDriveStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetFuseDriveStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CreateBucket(ctx, req.(*CreateBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_BackupKeysByPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupKeysByPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).BackupKeysByPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/BackupKeysByPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).BackupKeysByPassphrase(ctx, req.(*BackupKeysByPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_RecoverKeysByPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverKeysByPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).RecoverKeysByPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/RecoverKeysByPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).RecoverKeysByPassphrase(ctx, req.(*RecoverKeysByPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ShareBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ShareBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ShareBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ShareBucket(ctx, req.(*ShareBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_JoinBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).JoinBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/JoinBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).JoinBucket(ctx, req.(*JoinBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ShareBucketViaPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareBucketViaPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ShareBucketViaPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ShareBucketViaPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ShareBucketViaPublicKey(ctx, req.(*ShareBucketViaPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ListBuckets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBucketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListBuckets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListBuckets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListBuckets(ctx, req.(*ListBucketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_CopyAndShareFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyAndShareFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CopyAndShareFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CopyAndShareFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CopyAndShareFiles(ctx, req.(*CopyAndShareFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpaceApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "space.SpaceApi",
	HandlerType: (*SpaceApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDirectories",
			Handler:    _SpaceApi_ListDirectories_Handler,
		},
		{
			MethodName: "ListDirectory",
			Handler:    _SpaceApi_ListDirectory_Handler,
		},
		{
			MethodName: "GenerateKeyPair",
			Handler:    _SpaceApi_GenerateKeyPair_Handler,
		},
		{
			MethodName: "GenerateKeyPairWithForce",
			Handler:    _SpaceApi_GenerateKeyPairWithForce_Handler,
		},
		{
			MethodName: "OpenFile",
			Handler:    _SpaceApi_OpenFile_Handler,
		},
		{
			MethodName: "GeneratePublicFileLink",
			Handler:    _SpaceApi_GeneratePublicFileLink_Handler,
		},
		{
			MethodName: "OpenPublicFile",
			Handler:    _SpaceApi_OpenPublicFile_Handler,
		},
		{
			MethodName: "CreateFolder",
			Handler:    _SpaceApi_CreateFolder_Handler,
		},
		{
			MethodName: "ToggleFuseDrive",
			Handler:    _SpaceApi_ToggleFuseDrive_Handler,
		},
		{
			MethodName: "GetFuseDriveStatus",
			Handler:    _SpaceApi_GetFuseDriveStatus_Handler,
		},
		{
			MethodName: "CreateBucket",
			Handler:    _SpaceApi_CreateBucket_Handler,
		},
		{
			MethodName: "BackupKeysByPassphrase",
			Handler:    _SpaceApi_BackupKeysByPassphrase_Handler,
		},
		{
			MethodName: "RecoverKeysByPassphrase",
			Handler:    _SpaceApi_RecoverKeysByPassphrase_Handler,
		},
		{
			MethodName: "ShareBucket",
			Handler:    _SpaceApi_ShareBucket_Handler,
		},
		{
			MethodName: "JoinBucket",
			Handler:    _SpaceApi_JoinBucket_Handler,
		},
		{
			MethodName: "ShareBucketViaPublicKey",
			Handler:    _SpaceApi_ShareBucketViaPublicKey_Handler,
		},
		{
			MethodName: "ListBuckets",
			Handler:    _SpaceApi_ListBuckets_Handler,
		},
		{
			MethodName: "CopyAndShareFiles",
			Handler:    _SpaceApi_CopyAndShareFiles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _SpaceApi_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TxlSubscribe",
			Handler:       _SpaceApi_TxlSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddItems",
			Handler:       _SpaceApi_AddItems_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "space.proto",
}
